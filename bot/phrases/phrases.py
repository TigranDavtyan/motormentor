#This is a generated file
from data import DatabaseManager
db = DatabaseManager()

ARM = 0
RUS = 1
ENG = 2

def start(cid : int, all : bool = False) -> str:
    '''Welcome to the Motor Mentor Bot! This bot predicts car prices based on various features. Whether you're selling, buying, or interested in analyzing market trends, this bot is here to assist you.

By providing details about your car, such as brand, model, year, mileage, and more, the bot will estimate the price range for your vehicle. This can help you set a competitive selling price, make informed buying decisions, or gain insights into the factors that influence car prices.

Please note that the predictions provided are estimates based on available data. Actual market prices may vary due to factors like location, condition, and market demand.

Enjoy using the Motor Mentor Bot! Feel free to ask any questions to the admin. Let's begin! 
<a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>'''
    phrases = ['''‘≤’°÷Ä’´ ’£’°’¨’∏÷Ç’Ω’ø Motor Mentor Bot: ‘±’µ’Ω ’¢’∏’ø’® ’Ø’°’∂’≠’°’ø’•’Ω’∏÷Ç’¥ ’ß ’¥’•÷Ñ’•’∂’°’∂’•÷Ä’´ ’£’∂’•÷Ä’®’ù ’∞’´’¥’∂’æ’•’¨’∏’æ ’ø’°÷Ä’¢’•÷Ä ’∞’°’ø’Ø’°’∂’´’∑’∂’•÷Ä’´ ’æ÷Ä’°: ‘±’∂’Ø’°’≠ ’∂÷Ä’°’∂’´÷Å, ’©’• ’§’∏÷Ç÷Ñ ’æ’°’≥’°’º’∏÷Ç’¥ ’•÷Ñ, ’£’∂’∏÷Ç’¥ ’•÷Ñ ’Ø’°’¥ ’∞’•’ø’°÷Ñ÷Ä÷Ñ÷Ä’æ’°’Æ ’•÷Ñ ’∑’∏÷Ç’Ø’°’µ’´ ’¥’´’ø’∏÷Ç’¥’∂’•÷Ä’´ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’°’¥’¢, ’°’µ’Ω ’¢’∏’ø’∂ ’°’µ’Ω’ø’•’≤ ’ß ’±’•’¶ ÷Ö’£’∂’•’¨’∏÷Ç ’∞’°’¥’°÷Ä:

’è÷Ä’°’¥’°’§÷Ä’•’¨’∏’æ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’¥’°’Ω’´’∂ ’¥’°’∂÷Ä’°’¥’°’Ω’∂’•÷Ä, ’´’∂’π’∫’´’Ω’´÷Ñ ’•’∂ ’°’∫÷Ä’°’∂÷Ñ’°’∂’´’∑’®, ’¥’∏’§’•’¨’®, ’ø’°÷Ä’´’∂, ’æ’°’¶÷Ñ’® ÷á ’°’µ’¨’∂, ’¢’∏’ø’® ’Ø’£’∂’°’∞’°’ø’´ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’£’∂’•÷Ä’´ ’¥’´’ª’°’Ø’°’µ÷Ñ’®: ’ç’° ’Ø’°÷Ä’∏’≤ ’ß ÷Ö’£’∂’•’¨ ’±’•’¶ ’Ω’°’∞’¥’°’∂’•’¨ ’¥÷Ä÷Å’∏÷Ç’∂’°’Ø ’æ’°’≥’°’º÷Ñ’´ ’£’´’∂, ’Ø’°’µ’°÷Å’∂’•’¨ ’ø’•’≤’•’Ø’°÷Å’æ’°’Æ ’£’∂’¥’°’∂ ’∏÷Ä’∏’∑’∏÷Ç’¥’∂’•÷Ä ’Ø’°’¥ ’±’•’º÷Ñ ’¢’•÷Ä’•’¨ ’∫’°’ø’Ø’•÷Ä’°÷Å’∏÷Ç’¥’∂’•÷Ä ’¥’•÷Ñ’•’∂’°’∂’•÷Ä’´ ’£’∂’•÷Ä’´ ’æ÷Ä’° ’°’¶’§’∏’≤ ’£’∏÷Ä’Æ’∏’∂’∂’•÷Ä’´ ’¥’°’Ω’´’∂:

‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’∂’Ø’°’ø’´ ’∏÷Ç’∂’•’∂’°’¨, ’∏÷Ä ’∂’•÷Ä’Ø’°’µ’°÷Å’æ’°’Æ ’Ø’°’∂’≠’°’ø’•’Ω’∏÷Ç’¥’∂’•÷Ä’® ’£’∂’°’∞’°’ø’∏÷Ç’¥’∂’•÷Ä ’•’∂’ù ’∞’´’¥’∂’æ’°’Æ ’°’º’Ø’° ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’æ÷Ä’°: ‘ª÷Ä’°’Ø’°’∂ ’∑’∏÷Ç’Ø’°’µ’°’Ø’°’∂ ’£’∂’•÷Ä’® ’Ø’°÷Ä’∏’≤ ’•’∂ ’ø’°÷Ä’¢’•÷Ä ’¨’´’∂’•’¨’ù ’∫’°’µ’¥’°’∂’°’æ’∏÷Ä’æ’°’Æ ’°’µ’∂’∫’´’Ω’´ ’£’∏÷Ä’Æ’∏’∂’∂’•÷Ä’∏’æ, ’´’∂’π’∫’´’Ω’´÷Ñ ’•’∂ ’£’ø’∂’æ’•’¨’∏÷Ç ’æ’°’µ÷Ä’®, ’æ’´’≥’°’Ø’® ÷á ’∑’∏÷Ç’Ø’°’µ’°’Ø’°’∂ ’∫’°’∞’°’∂’ª’°÷Ä’Ø’®:

‘±’¶’°’ø’∏÷Ä’•’∂ ÷Å’°’∂’Ø’°÷Å’°’Æ ’∞’°÷Ä÷Å ’∏÷Ç’≤’≤’•÷Ñ ’°’§’¥’´’∂’´’∂: ’é’°’µ’•’¨’•’õ÷Ñ Motor Mentor Bot-’®: ‘µ’Ø’•÷Ñ ’Ω’Ø’Ω’•’∂÷Ñ!
<a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''', '''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ Motor Mentor! –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ—Ç —Ü–µ–Ω—ã –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫. –ï—Å–ª–∏ –≤—ã –ø—Ä–æ–¥–∞–µ—Ç–µ, –ø–æ–∫—É–ø–∞–µ—Ç–µ –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç–µ—Å—å –∞–Ω–∞–ª–∏–∑–æ–º —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π, —ç—Ç–æ—Ç –±–æ—Ç –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º.

–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ, —Ç–∞–∫—É—é –∫–∞–∫ –º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞, –ø—Ä–æ–±–µ–≥ –∏ —Ç. –¥., –±–æ—Ç –æ—Ü–µ–Ω–∏—Ç –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω –Ω–∞ –≤–∞—à –∞–≤—Ç–æ–º–æ–±–∏–ª—å. –≠—Ç–æ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤–∞–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω—É—é —Ü–µ–Ω—É –ø—Ä–æ–¥–∞–∂–∏, –ø—Ä–∏–Ω—è—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –æ –ø–æ–∫—É–ø–∫–µ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ —Ñ–∞–∫—Ç–æ—Ä–∞—Ö, –≤–ª–∏—è—é—â–∏—Ö –Ω–∞ —Ü–µ–Ω—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è.

–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã —è–≤–ª—è—é—Ç—Å—è –æ—Ü–µ–Ω–∫–∞–º–∏, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä—ã–Ω–æ—á–Ω—ã–µ —Ü–µ–Ω—ã –º–æ–≥—É—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∞–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, –∫–∞–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Ä—ã–Ω–æ—á–Ω—ã–π —Å–ø—Ä–æ—Å.

–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–æ—Ç–∞ Motor Mentor! –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!
<a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''', '''Welcome to the Motor Mentor Bot! This bot predicts car prices based on various features. Whether you're selling, buying, or interested in analyzing market trends, this bot is here to assist you.

By providing details about your car, such as brand, model, year, mileage, and more, the bot will estimate the price range for your vehicle. This can help you set a competitive selling price, make informed buying decisions, or gain insights into the factors that influence car prices.

Please note that the predictions provided are estimates based on available data. Actual market prices may vary due to factors like location, condition, and market demand.

Enjoy using the Motor Mentor Bot! Feel free to ask any questions to the admin. Let's begin! 
<a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def help(cid : int, all : bool = False) -> str:
    '''If you are stuck or have any questions you can contact the admin at <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>‚Ä§ He will definitely help youüôÇ'''
    phrases = ['''‘µ’©’• ’°’∂’•’¨’°’∂’•’¨’´ ’æ’´’≥’°’Ø’∏÷Ç’¥ ’•÷Ñ ’Ø’°’¥ ’∞’°÷Ä÷Å’•÷Ä ’∏÷Ç’∂’•÷Ñ, ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’Ø’°’∫’æ’•’¨ ’°’§’¥’´’∂’´’Ω’ø÷Ä’°’ø’∏÷Ä’´ ’∞’•’ø <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>÷â ’Ü’° ’°’∂’∫’°’µ’¥’°’∂ ’Ø÷Ö’£’∂’´ ’±’•’¶üôÇ''', '''–ï—Å–ª–∏ –≤—ã –∑–∞—Å—Ç—Ä—è–ª–∏ –∏–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –ø–æ –∞–¥—Ä–µ—Å—É <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>‚Ä§ –û–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–º –ø–æ–º–æ–∂–µ—ÇüôÇ''', '''If you are stuck or have any questions you can contact the admin at <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>‚Ä§ He will definitely help youüôÇ''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def language_change(cid : int, all : bool = False) -> str:
    '''üá¶üá≤üá∑üá∫üá∫üá∏ Change language'''
    phrases = ['''üá¶üá≤üá∑üá∫üá∫üá∏ ’ì’∏’≠’•’¨ ’¨’•’¶’∏÷Ç’∂''', '''üá¶üá≤üá∑üá∫üá∫üá∏ –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫''', '''üá¶üá≤üá∑üá∫üá∫üá∏ Change language''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def language_choose(cid : int, all : bool = False) -> str:
    '''Select language üá∫üá∏'''
    phrases = ['''‘∏’∂’ø÷Ä’•÷Ñ ’¨’•’¶’∏÷Ç’∂ üá¶üá≤''', '''–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ üá∑üá∫''', '''Select language üá∫üá∏''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def languages(cid : int, all : bool = False) -> str:
    '''Englishüá∫üá∏'''
    phrases = ['''’Ä’°’µ’•÷Ä’•’∂üá¶üá≤''', '''–†—É—Å—Å–∫–∏–πüá∑üá∫''', '''Englishüá∫üá∏''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def language_set(cid : int, all : bool = False) -> str:
    '''English is selected üá∫üá∏'''
    phrases = ['''‘∏’∂’ø÷Ä’æ’•÷Å ’∞’°’µ’•÷Ä’•’∂ ’¨’•’¶’∏÷Ç’∂ üá¶üá≤''', '''–í—ã–±—Ä–∞–Ω —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ üá∑üá∫''', '''English is selected üá∫üá∏''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def agree(cid : int, all : bool = False) -> str:
    '''‚úÖ I agree!'''
    phrases = ['''‚úÖ ’Ä’°’¥’°’±’°’µ’∂ ’•’¥!''', '''‚úÖ –Ø —Å–æ–≥–ª–∞—Å–µ–Ω!''', '''‚úÖ I agree!''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def disagree(cid : int, all : bool = False) -> str:
    '''‚ùå I disagree'''
    phrases = ['''‚ùå ’Ä’°’¥’°’±’°’µ’∂ ’π’•’¥''', '''‚ùå –Ø –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω''', '''‚ùå I disagree''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def cancel(cid : int, all : bool = False) -> str:
    '''üö´ Cancel'''
    phrases = ['''üö´ ’â’•’≤’°÷Ä’Ø’•’¨''', '''üö´ –û—Ç–º–µ–Ω–∏—Ç—å''', '''üö´ Cancel''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def canceled(cid : int, all : bool = False) -> str:
    '''üö´ Canceled'''
    phrases = ['''üö´ ’â’•’≤’°÷Ä’Ø’æ’°’Æ ’ß''', '''üö´ –û—Ç–º–µ–Ω–µ–Ω–æ''', '''üö´ Canceled''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def all_right(cid : int, all : bool = False) -> str:
    '''‚úÖ That's right'''
    phrases = ['''‚úÖ ’É’´’∑’ø ’ß''', '''‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ''', '''‚úÖ That's right''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def back(cid : int, all : bool = False) -> str:
    '''üëà Back'''
    phrases = ['''üëà ’é’•÷Ä’°’§’°’º’∂’°’¨''', '''üëà –ù–∞–∑–∞–¥''', '''üëà Back''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def skip(cid : int, all : bool = False) -> str:
    '''üëâ Skip'''
    phrases = ['''üëâ ‘≤’°÷Å ’©’∏’≤’∂’•’¨''', '''üëâ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å''', '''üëâ Skip''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def confirm(cid : int, all : bool = False) -> str:
    '''üëç Confirm'''
    phrases = ['''üëç ’Ä’°’Ω’ø’°’ø’•’¨''', '''üëç –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å''', '''üëç Confirm''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def confirmed(cid : int, all : bool = False) -> str:
    '''üëç Confirmed'''
    phrases = ['''üëç ’Ä’°’Ω’ø’°’ø’æ’°’Æ ’ß''', '''üëç –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ''', '''üëç Confirmed''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def yes(cid : int, all : bool = False) -> str:
    '''‚úÖ Yes'''
    phrases = ['''‚úÖ ‘±’µ’∏’õ''', '''‚úÖ –î–∞''', '''‚úÖ Yes''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def no(cid : int, all : bool = False) -> str:
    '''‚ùå No'''
    phrases = ['''‚ùå ’à’π''', '''‚ùå –ù–µ—Ç''', '''‚ùå No''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def ok(cid : int, all : bool = False) -> str:
    '''ok'''
    phrases = ['''÷Ö’Ø''', '''–æ–∫''', '''ok''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def wrong_action(cid : int, all : bool = False) -> str:
    '''‚ùåWrong action‚ùå
 Read the message again‚òùÔ∏è, get /help from admin or go to /start and try again.'''
    phrases = ['''‚ùå’ç’≠’°’¨ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂‚ùå
 ‘ø÷Ä’Ø’´’∂ ’Ø’°÷Ä’§’°÷Å’•÷Ñ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’®‚òùÔ∏è, ’Ω’ø’°÷Å’•÷Ñ /help ’°’§’¥’´’∂’´’Ω’ø÷Ä’°’ø’∏÷Ä’´÷Å ’Ø’°’¥ /start ’°÷Ä’•÷Ñ ÷á ’∂’∏÷Ä’´÷Å ÷É’∏÷Ä’±’•÷Ñ:''', '''‚ùå–ù–µ–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ‚ùå
 –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ —Ä–∞–∑‚òùÔ∏è, –ø–æ–ª—É—á–∏—Ç–µ /help –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.''', '''‚ùåWrong action‚ùå
 Read the message again‚òùÔ∏è, get /help from admin or go to /start and try again.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def duration(cid : int, all : bool = False) -> str:
    '''Duration'''
    phrases = ['''’è÷á’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂''', '''–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å''', '''Duration''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def fee(cid : int, all : bool = False) -> str:
    '''Fee'''
    phrases = ['''’é’≥’°÷Ä''', '''–ü–ª–∞—Ç–∞''', '''Fee''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def dram(cid : int, all : bool = False) -> str:
    '''amd'''
    phrases = ['''’§÷Ä’°’¥''', '''–¥—Ä–∞–º''', '''amd''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def minute(cid : int, all : bool = False) -> str:
    '''minutes'''
    phrases = ['''÷Ä’∏’∫’•''', '''–º–∏–Ω—É—Ç''', '''minutes''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def today(cid : int, all : bool = False) -> str:
    '''Today'''
    phrases = ['''‘±’µ’Ω÷Ö÷Ä''', '''–°–µ–≥–æ–¥–Ω—è''', '''Today''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def tomorrow(cid : int, all : bool = False) -> str:
    '''Tomorrow'''
    phrases = ['''’é’°’≤’®''', '''–ó–∞–≤—Ç—Ä–∞''', '''Tomorrow''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def afterTomorrow(cid : int, all : bool = False) -> str:
    '''The day after tomorrow'''
    phrases = ['''’é’°’≤’® ’π’ß ’¥’µ’∏÷Ç’Ω ÷Ö÷Ä’®''', '''–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞''', '''The day after tomorrow''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def date(cid : int, all : bool = False) -> str:
    '''Date'''
    phrases = ['''‘±’¥’Ω’°’©’´’æ''', '''–î–∞—Ç–∞''', '''Date''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def start2(cid : int, all : bool = False) -> str:
    '''Start'''
    phrases = ['''’ç’Ø’´’¶’¢''', '''–ù–∞—á–∞–ª–æ''', '''Start''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def end(cid : int, all : bool = False) -> str:
    '''End'''
    phrases = ['''’é’•÷Ä’ª''', '''–ö–æ–Ω–µ—Ü''', '''End''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def day(cid : int, all : bool = False) -> str:
    '''Day'''
    phrases = ['''’ï÷Ä''', '''–î–µ–Ω—å''', '''Day''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def january(cid : int, all : bool = False) -> str:
    '''January'''
    phrases = ['''’Ä’∏÷Ç’∂’æ’°÷Ä’´''', '''–Ø–Ω–≤–∞—Ä—å''', '''January''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def february(cid : int, all : bool = False) -> str:
    '''February'''
    phrases = ['''’ì’•’ø÷Ä’æ’°÷Ä’´''', '''–§–µ–≤—Ä–∞–ª—å''', '''February''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def march(cid : int, all : bool = False) -> str:
    '''March'''
    phrases = ['''’Ñ’°÷Ä’ø’´''', '''–ú–∞—Ä—Ç''', '''March''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def april(cid : int, all : bool = False) -> str:
    '''April'''
    phrases = ['''‘±’∫÷Ä’´’¨’´''', '''–ê–ø—Ä–µ–ª—å''', '''April''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def may(cid : int, all : bool = False) -> str:
    '''May'''
    phrases = ['''’Ñ’°’µ’´’Ω’´''', '''–ú–∞–π''', '''May''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def june(cid : int, all : bool = False) -> str:
    '''June'''
    phrases = ['''’Ä’∏÷Ç’∂’´’Ω’´''', '''–ù—é–Ω—å''', '''June''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def july(cid : int, all : bool = False) -> str:
    '''July'''
    phrases = ['''’Ä’∏÷Ç’¨’´’Ω’´''', '''–ò—é–ª—å''', '''July''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def august(cid : int, all : bool = False) -> str:
    '''August'''
    phrases = ['''’ï’£’∏’Ω’ø’∏’Ω’´''', '''–ê–≤–≥—É—Å—Ç''', '''August''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def september(cid : int, all : bool = False) -> str:
    '''September'''
    phrases = ['''’ç’•’∫’ø’•’¥’¢’•÷Ä’´''', '''–°–µ–Ω—Ç—è–±—Ä—å''', '''September''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def october(cid : int, all : bool = False) -> str:
    '''October'''
    phrases = ['''’Ä’∏’Ø’ø’•’¥’¢’•÷Ä’´''', '''–û–∫—Ç—è–±—Ä—å''', '''October''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def november(cid : int, all : bool = False) -> str:
    '''November'''
    phrases = ['''’Ü’∏’µ’•’¥’¢’•÷Ä’´''', '''–ù–æ—è–±—Ä—å''', '''November''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def december(cid : int, all : bool = False) -> str:
    '''December'''
    phrases = ['''‘¥’•’Ø’ø’•’¥’¢’•÷Ä’´''', '''–î–µ–∫–∞–±—Ä—å''', '''December''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def details(cid : int, all : bool = False) -> str:
    '''üßæ'''
    phrases = ['''üßæ''', '''üßæ''', '''üßæ''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def cancel(cid : int, all : bool = False) -> str:
    '''‚ùå'''
    phrases = ['''‚ùå''', '''‚ùå''', '''‚ùå''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def anonymous(cid : int, all : bool = False) -> str:
    '''unknown ü§∑‚Äç‚ôÄÔ∏è'''
    phrases = ['''’°’∂’∞’°’µ’ø ü§∑‚Äç‚ôÄÔ∏è''', '''–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π ü§∑‚Äç‚ôÄÔ∏è''', '''unknown ü§∑‚Äç‚ôÄÔ∏è''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def payment_successfull(cid : int,sub_end, all : bool = False) -> str:
    '''Your payment was successfullüéâ Subscription ends at [sub_end]. Now you can feel the real power of this botüí™'''
    phrases = ['''’Å’•÷Ä ’æ’≥’°÷Ä’∏÷Ç’¥’® ’∞’°’ª’∏’≤ ’ß ’•’≤’•’¨üéâ ‘≤’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂ ’°’æ’°÷Ä’ø’æ’∏÷Ç’¥ ’ß [sub_end]-’´’∂: ‘±’µ’™’¥ ’§’∏÷Ç÷Ñ ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’¶’£’°’¨ ’°’µ’Ω ’¢’∏’ø’´ ’´÷Ä’°’Ø’°’∂ ’∏÷Ç’™’®üí™''', '''–í–∞—à –ø–ª–∞—Ç–µ–∂ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æüéâ –ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –≤ [sub_end]. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â—É—é –º–æ—â—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞üí™''', '''Your payment was successfullüéâ Subscription ends at [sub_end]. Now you can feel the real power of this botüí™''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[sub_end]",str(sub_end))

def subscription(cid : int, all : bool = False) -> str:
    '''‚≠êÔ∏è Subscription'''
    phrases = ['''‚≠êÔ∏è ‘≤’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂''', '''‚≠êÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞''', '''‚≠êÔ∏è Subscription''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def sub_free(cid : int, all : bool = False) -> str:
    '''Free'''
    phrases = ['''‘±’∂’æ’≥’°÷Ä''', '''–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π''', '''Free''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def sub_premium(cid : int, all : bool = False) -> str:
    '''Premium'''
    phrases = ['''’ä÷Ä’•’¥’´’∏÷Ç’¥''', '''–ü—Ä–µ–º–∏—É–º''', '''Premium''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def sub_business(cid : int, all : bool = False) -> str:
    '''Business'''
    phrases = ['''‘≤’´’¶’∂’•’Ω''', '''–ë–∏–∑–Ω–µ—Å''', '''Business''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def sub_info_free(cid : int, all : bool = False) -> str:
    '''Your subscription is "Free". If you want to have a "Premium" subscription contact the admin. It only costs <b>990 AMD</b> but you get a lot of useful functionality. <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>'''
    phrases = ['''’Å’•÷Ä ’¢’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’® ¬´‘±’∂’æ’≥’°÷Ä¬ª ’ß: ‘µ’©’• ÷Å’°’∂’Ø’°’∂’∏÷Ç’¥ ’•÷Ñ ’∏÷Ç’∂’•’∂’°’¨ ¬´’ä÷Ä’•’¥’´’∏÷Ç’¥¬ª ’¢’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂, ’§’´’¥’•÷Ñ ’°’§’¥’´’∂’´’Ω’ø÷Ä’°’ø’∏÷Ä’´’∂: ‘±’µ’∂ ’°÷Ä’™’• ’®’∂’§’°’¥’•’∂’® <b>990 ’§÷Ä’°’¥</b>, ’¢’°’µ÷Å ’§’∏÷Ç÷Ñ ’Ω’ø’°’∂’∏÷Ç’¥ ’•÷Ñ ’∑’°’ø ÷Ö’£’ø’°’Ø’°÷Ä ÷Ü’∏÷Ç’∂’Ø÷Å’´’∏’∂’°’¨’∏÷Ç’©’µ’∏÷Ç’∂: <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''', '''–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è". –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–º–µ—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ¬´–ü—Ä–µ–º–∏—É–º¬ª, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –≠—Ç–æ —Å—Ç–æ–∏—Ç –≤—Å–µ–≥–æ <b>990 –¥—Ä–∞–º</b>, –Ω–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞. <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''', '''Your subscription is "Free". If you want to have a "Premium" subscription contact the admin. It only costs <b>990 AMD</b> but you get a lot of useful functionality. <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def sub_info_premium(cid : int,sub_end_days, all : bool = False) -> str:
    '''Your subscription is "Premium". It ends in [sub_end_days] days. If you want to prolonge the subscription contact the admin. <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>'''
    phrases = ['''’Å’•÷Ä ’¢’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’® ¬´’ä÷Ä’•’¥’´’∏÷Ç’¥¬ª ’ß: ‘±’µ’∂ ’°’æ’°÷Ä’ø’æ’∏÷Ç’¥ ’ß [sub_end_days] ÷Ö÷Ä’´÷Å: ‘µ’©’• ÷Å’°’∂’Ø’°’∂’∏÷Ç’¥ ’•÷Ñ ’•÷Ä’Ø’°÷Ä’°÷Å’∂’•’¨ ’¢’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’®, ’§’´’¥’•÷Ñ ’°’§’¥’´’∂’´’Ω’ø÷Ä’°’ø’∏÷Ä’´’∂÷â <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''', '''–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ "–ü—Ä–µ–º–∏—É–º". –û–Ω –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ [sub_end_days] –¥–Ω–µ–π. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''', '''Your subscription is "Premium". It ends in [sub_end_days] days. If you want to prolonge the subscription contact the admin. <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[sub_end_days]",str(sub_end_days))

def subscription_not_enough(cid : int,user_sub,min_sub, all : bool = False) -> str:
    '''Your subscription ([user_sub]) is not sufficient for this action. Minimum subscription level for this action is "[min_sub]"‚Ä§ Contact the admin '''
    phrases = ['''’Å’•÷Ä ’¢’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’°’∂’® ([user_sub]) ’¢’°’æ’°÷Ä’°÷Ä ’π’ß ’°’µ’Ω ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’°’∂ ’∞’°’¥’°÷Ä: ‘±’µ’Ω ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’°’∂ ’∞’°’¥’°÷Ä ’¢’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’°’∂ ’∂’æ’°’¶’°’£’∏÷Ç’µ’∂ ’¥’°’Ø’°÷Ä’§’°’Ø’® "[min_sub]" ’ß''', '''–£—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ ([user_sub]) –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è. –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è: "[min_sub]"''', '''Your subscription ([user_sub]) is not sufficient for this action. Minimum subscription level for this action is "[min_sub]"‚Ä§ Contact the admin ''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[user_sub]",str(user_sub)).replace("[min_sub]",str(min_sub))

def subscription_end(cid : int, all : bool = False) -> str:
    '''‚ùóÔ∏è Warning ‚ùóÔ∏è
Your "Premium" subscribtion ended. Contact the administrator to activate it. <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>'''
    phrases = ['''‚ùóÔ∏è ‘∂’£’∏÷Ç’∑’°÷Å’∏÷Ç’¥ ‚ùóÔ∏è
’Å’•÷Ä ¬´’ä÷Ä’•’¥’´’∏÷Ç’¥¬ª ’¢’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂ ’°’æ’°÷Ä’ø’æ’•’¨ ’ß: ‘ø’°’∫’æ’•÷Ñ ’°’§’¥’´’∂’´’Ω’ø÷Ä’°’ø’∏÷Ä’´ ’∞’•’ø’ù ’°’µ’∂ ’°’Ø’ø’´’æ’°÷Å’∂’•’¨’∏÷Ç ’∞’°’¥’°÷Ä: <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''', '''‚ùóÔ∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ‚ùóÔ∏è
–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ "–ü—Ä–µ–º–∏—É–º" –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''', '''‚ùóÔ∏è Warning ‚ùóÔ∏è
Your "Premium" subscribtion ended. Contact the administrator to activate it. <a href="https://t.me/MotorMentorAdmin">Motor Mentor Admin</a>''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def referral(cid : int, all : bool = False) -> str:
    '''üîó Referrals'''
    phrases = ['''üîó ’å’•÷Ü’•÷Ä’°’¨’∂’•÷Ä''', '''üîó –†–µ—Ñ–µ—Ä–∞–ª—ã''', '''üîó Referrals''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def referral_info(cid : int,bonus_refs,bonus_days,ref_link, all : bool = False) -> str:
    '''Send this link to your friends and if they use this bot you will get a bonus. 
For every [bonus_refs] referrals your Premium subscription will be prolonged for [bonus_days] days.
Your referral link is 
<code>[ref_link]</code>'''
    phrases = ['''’à÷Ç’≤’°÷Ä’Ø’•÷Ñ ’°’µ’Ω ’∞’≤’∏÷Ç’¥’® ’±’•÷Ä ’®’∂’Ø’•÷Ä’∂’•÷Ä’´’∂ ÷á ’•’©’• ’∂÷Ä’°’∂÷Ñ ÷Ö’£’ø’æ’•’∂ ’°’µ’Ω ’¢’∏’ø’´÷Å, ’§’∏÷Ç÷Ñ ’Ø’Ω’ø’°’∂’°÷Ñ ’¢’∏’∂’∏÷Ç’Ω:
’Ö’∏÷Ç÷Ä’°÷Ñ’°’∂’π’µ’∏÷Ç÷Ä [bonus_refs] ’∏÷Ç’≤’≤’∏÷Ä’§’¥’°’∂ ’∞’°’¥’°÷Ä ’±’•÷Ä Premium ’¢’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’® ’Ø’•÷Ä’Ø’°÷Ä’°’±’£’æ’´ [bonus_days] ÷Ö÷Ä’∏’æ:
’Å’•÷Ä ’∏÷Ç’≤’≤’∏÷Ä’§’¥’°’∂ ’∞’≤’∏÷Ç’¥’∂ ’ß 
<code>[ref_link]</code>''', '''–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º, –∏ –µ—Å–ª–∏ –æ–Ω–∏ –≤–æ—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —ç—Ç–∏–º –±–æ—Ç–æ–º, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å.
–ó–∞ –∫–∞–∂–¥–æ–≥–æ [bonus_refs] —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤–∞—à–∞ –ü—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –ø—Ä–æ–¥–ª–µ–Ω–∞ –Ω–∞ [bonus_days] –¥–Ω–µ–π.
–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ 
<code>[ref_link]</code>''', '''Send this link to your friends and if they use this bot you will get a bonus. 
For every [bonus_refs] referrals your Premium subscription will be prolonged for [bonus_days] days.
Your referral link is 
<code>[ref_link]</code>''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[bonus_refs]",str(bonus_refs)).replace("[bonus_days]",str(bonus_days)).replace("[ref_link]",str(ref_link))

def no_referral_bonus(cid : int,referrals,nrefs,ndays, all : bool = False) -> str:
    '''You have [referrals] referrals. You need at least [nrefs] referrals to get bonus [ndays] days.'''
    phrases = ['''‘¥’∏÷Ç÷Ñ ’∏÷Ç’∂’•÷Ñ [referrals] ’∏÷Ç’≤’≤’∏÷Ä’§’∏÷Ç’¥’∂’•÷Ä: ’Å’•’¶ ’°’∂’∞÷Ä’°’™’•’∑’ø ’•’∂ ’°’º’∂’æ’°’¶’∂ [nrefs] ’∏÷Ç’≤’≤’∏÷Ä’§’∏÷Ç’¥’∂’•÷Ä’ù ’¢’∏’∂’∏÷Ç’Ω’°’µ’´’∂ [ndays] ÷Ö÷Ä’•÷Ä ’Ω’ø’°’∂’°’¨’∏÷Ç ’∞’°’¥’°÷Ä:''', '''–£ –≤–∞—Å –µ—Å—Ç—å [referrals] —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤. –í–∞–º –Ω—É–∂–Ω–æ –∫–∞–∫ –º–∏–Ω–∏–º—É–º [nrefs] —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ [ndays] –¥–Ω–µ–π.''', '''You have [referrals] referrals. You need at least [nrefs] referrals to get bonus [ndays] days.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[referrals]",str(referrals)).replace("[nrefs]",str(nrefs)).replace("[ndays]",str(ndays))

def referral_bonus(cid : int,referrals,ndays, all : bool = False) -> str:
    '''You have [referrals] referrals. Press this button to get your [ndays] days bonus üòÄ'''
    phrases = ['''‘¥’∏÷Ç÷Ñ ’∏÷Ç’∂’•÷Ñ [referrals] ’∏÷Ç’≤’≤’∏÷Ä’§’∏÷Ç’¥’∂’•÷Ä: ’ç’•’≤’¥’•÷Ñ ’°’µ’Ω ’Ø’∏’≥’°’Ø’®’ù ’±’•÷Ä [ndays] ÷Ö÷Ä’æ’° ’¢’∏’∂’∏÷Ç’Ω’® ’Ω’ø’°’∂’°’¨’∏÷Ç ’∞’°’¥’°÷Ä üòÄ''', '''–£ –≤–∞—Å –µ—Å—Ç—å [referrals] —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤. –ù–∞–∂–º–∏—Ç–µ —ç—Ç—É –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å [ndays] –¥–Ω–µ–π üòÄ''', '''You have [referrals] referrals. Press this button to get your [ndays] days bonus üòÄ''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[referrals]",str(referrals)).replace("[ndays]",str(ndays))

def get_referral_bonus(cid : int, all : bool = False) -> str:
    '''üéâ GET BONUS!!! üéâ'''
    phrases = ['''üéâ ’ç’è‘±’Ü‘±‘º ‘≤’à’Ü’à’í’ç!!! üéâ''', '''üéâ –ü–û–õ–£–ß–ò–¢–ï –ë–û–ù–£–°!!! üéâ''', '''üéâ GET BONUS!!! üéâ''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def congratulate_bonus(cid : int,ndays, all : bool = False) -> str:
    '''üéâ Congratulations!!! üéâ
 You got [ndays] days bonus.'''
    phrases = ['''üéâ ’á’∂’∏÷Ä’∞’°’æ’∏÷Ä’∏÷Ç’¥ ’•’∂÷Ñ!!! üéâ
 ’§’∏÷Ç÷Ñ ’Ω’ø’°÷Å’°÷Ñ [ndays] ÷Ö÷Ä’æ’° ’¢’∏’∂’∏÷Ç’Ω:''', '''üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!!! üéâ
 –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å [ndays] –¥–Ω–µ–π.''', '''üéâ Congratulations!!! üéâ
 You got [ndays] days bonus.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[ndays]",str(ndays))

def phone_number(cid : int, all : bool = False) -> str:
    '''Phone number'''
    phrases = ['''’Ä’•’º’°’≠’∏’Ω’°’∞’°’¥’°÷Ä''', '''–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞''', '''Phone number''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def deleted(cid : int, all : bool = False) -> str:
    '''‚ùå Deleted ‚ùå'''
    phrases = ['''‚ùå ’ã’∂’ª’æ’°’Æ ’ß ‚ùå''', '''‚ùå –£–¥–∞–ª–µ–Ω–æ ‚ùå''', '''‚ùå Deleted ‚ùå''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def delete(cid : int, all : bool = False) -> str:
    '''‚ùå Delete'''
    phrases = ['''‚ùå ’ã’∂’ª’•’¨''', '''‚ùå –£–¥–∞–ª–∏—Ç—å''', '''‚ùå Delete''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def menu(cid : int, all : bool = False) -> str:
    '''üìú Menu'''
    phrases = ['''üìú ’Ñ’•’∂’µ’∏÷Ç''', '''üìú –ú–µ–Ω—é''', '''üìú Menu''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def main_menu(cid : int, all : bool = False) -> str:
    '''üìú Menu
Buttons marked with ‚≠êÔ∏è have actions which require Premium subscription.'''
    phrases = ['''üìú ’Ñ’•’∂’µ’∏÷Ç
‚≠êÔ∏è-’∏’æ ’∂’∑’æ’°’Æ ’Ø’∏’≥’°’Ø’∂’•÷Ä’∂ ’∏÷Ç’∂’•’∂ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä, ’∏÷Ä’∏’∂÷Ñ ’∫’°’∞’°’∂’ª’∏÷Ç’¥ ’•’∂ ’ä÷Ä’•’¥’´’∏÷Ç’¥ ’¢’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂:''', '''üìú –ú–µ–Ω—é
–ö–Ω–æ–ø–∫–∏, –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ ‚≠êÔ∏è, –∏–º–µ—é—Ç –¥–µ–π—Å—Ç–≤–∏—è, —Ç—Ä–µ–±—É—é—â–∏–µ –ü—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∏.''', '''üìú Menu
Buttons marked with ‚≠êÔ∏è have actions which require Premium subscription.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def get_car_price(cid : int, all : bool = False) -> str:
    '''üöó Your car price'''
    phrases = ['''üöó ’Å’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’°÷Ä’™’•÷Ñ’®''', '''üöó –¶–µ–Ω–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è''', '''üöó Your car price''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def import_from_listam(cid : int, all : bool = False) -> str:
    '''üßæ Import from List.am‚≠êÔ∏è'''
    phrases = ['''üßæ ’Ü’•÷Ä’¥’∏÷Ç’Æ’•’¨ List.am-’´÷Å‚≠êÔ∏è''', '''üßæ –ò–º–ø–æ—Ä—Ç –∏–∑ List.am‚≠êÔ∏è''', '''üßæ Import from List.am‚≠êÔ∏è''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def import_from_myautoge(cid : int, all : bool = False) -> str:
    '''üßæ Import from MyAuto.ge‚≠êÔ∏è'''
    phrases = ['''üßæ ’Ü’•÷Ä’¥’∏÷Ç’Æ’•’¨ MyAuto.ge-’´÷Å‚≠êÔ∏è''', '''üßæ –ò–º–ø–æ—Ä—Ç –∏–∑ MyAuto.ge‚≠êÔ∏è''', '''üßæ Import from MyAuto.ge‚≠êÔ∏è''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def saved_cars(cid : int, all : bool = False) -> str:
    '''üìå Saved cars‚≠êÔ∏è'''
    phrases = ['''üìå ’ä’°’∞’∫’°’∂’æ’°’Æ ’¥’•÷Ñ’•’∂’°’∂’•÷Ä‚≠êÔ∏è''', '''üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏‚≠êÔ∏è''', '''üìå Saved cars‚≠êÔ∏è''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def general_info(cid : int, all : bool = False) -> str:
    '''‚ÑπÔ∏è Info'''
    phrases = ['''‚ÑπÔ∏è ‘ª’∂÷Ü’∏''', '''‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è''', '''‚ÑπÔ∏è Info''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def found_saved_car(cid : int,nCars, all : bool = False) -> str:
    '''Based on your saved car`s parameters I found [nCars] cars. You can always see this list in the "üìå Saved cars" menu.
'''
    phrases = ['''’Å’•÷Ä ’∫’°’∞’∫’°’∂’æ’°’Æ ’¥’•÷Ñ’•’∂’°’µ’´ ’∫’°÷Ä’°’¥’•’ø÷Ä’•÷Ä’´ ’∞’´’¥’°’∂ ’æ÷Ä’° ’•’Ω ’£’ø’° [nCars] ’¥’•÷Ñ’•’∂’°’∂’•÷Ä: ‘±’µ’Ω ÷Å’°’∂’Ø’® ’¥’´’∑’ø ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’ø’•’Ω’∂’•’¨ ¬´üìå ’ä’°’∞’∫’°’∂’æ’°’Æ ’¥’•÷Ñ’•’∂’°’∂’•÷Ä¬ª ’¢’°’™’∂’∏÷Ç’¥÷â
''', '''–ü–æ –≤–∞—à–∏–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è —è –Ω–∞—à–µ–ª [nCars] –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π. –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –≤ –º–µ–Ω—é "üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏".
''', '''Based on your saved car`s parameters I found [nCars] cars. You can always see this list in the "üìå Saved cars" menu.
''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[nCars]",str(nCars))

def found_cars_so_far(cid : int,nCars, all : bool = False) -> str:
    '''Found [nCars] cars so far.'''
    phrases = ['''’Ñ’´’∂’π ’°’µ’™’¥ ’£’ø’∂’æ’•’¨ ’•’∂ [nCars] ’¥’•÷Ñ’•’∂’°’∂’•÷Ä:''', '''–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω–æ [nCars] –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.''', '''Found [nCars] cars so far.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[nCars]",str(nCars))

def add_ad(cid : int, all : bool = False) -> str:
    '''Add advertisement'''
    phrases = ['''Add advertisement''', '''Add advertisement''', '''Add advertisement''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def visit_website(cid : int, all : bool = False) -> str:
    '''Visit website'''
    phrases = ['''Visit website''', '''Visit website''', '''Visit website''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def list_am_usage(cid : int, all : bool = False) -> str:
    '''Import car detailes from List.am by copy and pasting the car page url here, like "https://www.list.am/item/19911991"'''
    phrases = ['''’Ü’•÷Ä’¥’∏÷Ç’Æ’•÷Ñ ’°’æ’ø’∏’¥’•÷Ñ’•’∂’°’µ’´ ’ø’æ’µ’°’¨’∂’•÷Ä’® List.am-’´÷Å’ù ’∫’°’ø’≥’•’∂’•’¨’∏’æ ÷á ’ø’•’≤’°’§÷Ä’•’¨’∏’æ ’¥’•÷Ñ’•’∂’°’µ’´ ’ß’ª’´ url-’® ’°’µ’Ω’ø’•’≤, ÷Ö÷Ä’´’∂’°’Ø’ù ¬´https://www.list.am/item/19911991¬ª''', '''–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ –∏–∑ List.am, —Å–∫–æ–ø–∏—Ä–æ–≤–∞–≤ –∏ –≤—Å—Ç–∞–≤–∏–≤ URL-–∞–¥—Ä–µ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä ¬´https://www.list.am/item/19911991¬ª.''', '''Import car detailes from List.am by copy and pasting the car page url here, like "https://www.list.am/item/19911991"''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def listam_not_possible(cid : int, all : bool = False) -> str:
    '''I cant import this cars data, try another one.'''
    phrases = ['''‘µ’Ω ’π’•’¥ ’Ø’°÷Ä’∏’≤ ’∂’•÷Ä’¥’∏÷Ç’Æ’•’¨ ’°’µ’Ω ’¥’•÷Ñ’•’∂’°’∂’•÷Ä’´ ’ø’æ’µ’°’¨’∂’•÷Ä’®, ÷É’∏÷Ä’±’•÷Ñ ’¥’•’Ø ’∏÷Ç÷Ä’´’∑’®:''', '''–Ø –Ω–µ –º–æ–≥—É –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —ç—Ç–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π.''', '''I cant import this cars data, try another one.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def search_for_cars(cid : int, all : bool = False) -> str:
    '''Search for cars like this'''
    phrases = ['''’ì’∂’ø÷Ä’•’¨ ’∂’¥’°’∂ ’¥’•÷Ñ’•’∂’°’∂’•÷Ä''', '''–ò—Å–∫–∞—Ç—å —Ç–∞–∫–∏–µ –º–∞—à–∏–Ω—ã''', '''Search for cars like this''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def listam_what_to_do(cid : int, all : bool = False) -> str:
    '''What do you want to do with this?'''
    phrases = ['''‘ª’û’∂’π ’•÷Ñ ’∏÷Ç’¶’∏÷Ç’¥ ’°’∂’•’¨ ’Ω÷Ä’° ’∞’•’ø:''', '''–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å?''', '''What do you want to do with this?''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def myautoge_usage(cid : int, all : bool = False) -> str:
    '''Import car detailes from MyAuto.ge by copy and pasting the car page url here, like <code>https://www.myauto.ge/ru/pr/94171446/prodaetsya-mashini-kupe-mercedes-benz-c-200-2001-benzinvsprysk-tbilisi?offerType=superVip</code>'''
    phrases = ['''’Ü’•÷Ä’¥’∏÷Ç’Æ’•÷Ñ ’°’æ’ø’∏’¥’•÷Ñ’•’∂’°’µ’´ ’ø’æ’µ’°’¨’∂’•÷Ä’® MyAuto.ge-’´÷Å’ù ’∫’°’ø’≥’•’∂’•’¨’∏’æ ÷á ’ø’•’≤’°’§÷Ä’•’¨’∏’æ ’¥’•÷Ñ’•’∂’°’µ’´ ’ß’ª’´ url-’® ’°’µ’Ω’ø’•’≤, ÷Ö÷Ä’´’∂’°’Ø’ù <code>https://www.myauto.ge/ru/pr/94171446/prodaetsya-mashini-kupe-mercedes-benz-c-200-2001-benzinvsprysk-tbilisi?offerType=superVip</code>''', '''–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ –∏–∑ MyAuto.ge, —Å–∫–æ–ø–∏—Ä–æ–≤–∞–≤ –∏ –≤—Å—Ç–∞–≤–∏–≤ URL-–∞–¥—Ä–µ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä <code>https://www.myauto.ge/ru/pr/94171446/prodaetsya-mashini-kupe-mercedes-benz-c-200-2001-benzinvsprysk-tbilisi?offerType=superVip</code>.''', '''Import car detailes from MyAuto.ge by copy and pasting the car page url here, like <code>https://www.myauto.ge/ru/pr/94171446/prodaetsya-mashini-kupe-mercedes-benz-c-200-2001-benzinvsprysk-tbilisi?offerType=superVip</code>''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def myautoge_not_possible(cid : int, all : bool = False) -> str:
    '''I cant import this cars data, try another one.'''
    phrases = ['''‘µ’Ω ’π’•’¥ ’Ø’°÷Ä’∏’≤ ’∂’•÷Ä’¥’∏÷Ç’Æ’•’¨ ’°’µ’Ω ’¥’•÷Ñ’•’∂’°’∂’•÷Ä’´ ’ø’æ’µ’°’¨’∂’•÷Ä’®, ÷É’∏÷Ä’±’•÷Ñ ’¥’•’Ø ’∏÷Ç÷Ä’´’∑’®:''', '''–Ø –Ω–µ –º–æ–≥—É –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —ç—Ç–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π.''', '''I cant import this cars data, try another one.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def myautoge_what_to_do(cid : int, all : bool = False) -> str:
    '''What do you want to do with this?'''
    phrases = ['''‘ª’û’∂’π ’•÷Ñ ’∏÷Ç’¶’∏÷Ç’¥ ’°’∂’•’¨ ’Ω÷Ä’° ’∞’•’ø:''', '''–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å?''', '''What do you want to do with this?''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def import_data(cid : int, all : bool = False) -> str:
    '''Import car parameters'''
    phrases = ['''’Ü’•÷Ä’¥’∏÷Ç’Æ’•’¨ ’°’æ’ø’∏’¥’•÷Ñ’•’∂’°’µ’´ ’∫’°÷Ä’°’¥’•’ø÷Ä’•÷Ä’®''', '''–ò–º–ø–æ—Ä—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è''', '''Import car parameters''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def show_price_updates(cid : int, all : bool = False) -> str:
    '''Show price updates‚≠êÔ∏è'''
    phrases = ['''’ë’∏÷Ç’µ÷Å ’ø’°’¨ ’£’∂’•÷Ä’´ ’©’°÷Ä’¥’°÷Å’∏÷Ç’¥’∂’•÷Ä’®‚≠êÔ∏è''', '''–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω‚≠êÔ∏è''', '''Show price updates‚≠êÔ∏è''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def follow_price_updates(cid : int, all : bool = False) -> str:
    '''Follow future updates‚≠êÔ∏è'''
    phrases = ['''’Ä’•’ø÷á’•÷Ñ ’°’∫’°’£’° ’©’°÷Ä’¥’°÷Å’∏÷Ç’¥’∂’•÷Ä’´’∂‚≠êÔ∏è''', '''–°–ª–µ–¥–∏—Ç–µ –∑–∞ –±—É–¥—É—â–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏‚≠êÔ∏è''', '''Follow future updates‚≠êÔ∏è''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def no_price_updates(cid : int, all : bool = False) -> str:
    '''‚ùå No price updates!'''
    phrases = ['''‚ùå ‘≥’∂’•÷Ä’´ ’©’°÷Ä’¥’°÷Å’∏÷Ç’¥’∂’•÷Ä ’π’Ø’°’∂:''', '''‚ùå–ù–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ü–µ–Ω!''', '''‚ùå No price updates!''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def follow_successfull(cid : int,car_brand,model,year,engine_size,price, all : bool = False) -> str:
    '''[car_brand] [model] 
[year]   [engine_size] L
[price] $
‚úÖ Car saved'''
    phrases = ['''[car_brand] [model] 
[year]   [engine_size] L
[price] $
‚úÖ ’Ñ’•÷Ñ’•’∂’°’∂ ’∫’°’∞’∫’°’∂’æ’°’Æ ’ß''', '''[car_brand] [model] 
[year]   [engine_size] L
[price] $
‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω''', '''[car_brand] [model] 
[year]   [engine_size] L
[price] $
‚úÖ Car saved''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[car_brand]",str(car_brand)).replace("[model]",str(model)).replace("[year]",str(year)).replace("[engine_size]",str(engine_size)).replace("[price]",str(price))

def remove_follow(cid : int, all : bool = False) -> str:
    '''‚ùå Unfollow'''
    phrases = ['''‚ùå ’â’∞’•’ø÷á’•’¨''', '''‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è''', '''‚ùå Unfollow''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def notify_price_update(cid : int,car_brand,model,year,engine_size,old_price,new_price,url, all : bool = False) -> str:
    '''[car_brand] [model] 
[year]   [engine_size] L

Old price - [old_price] $
New price - [new_price] $

[url]'''
    phrases = ['''[car_brand] [model] 
[year]   [engine_size] L

’Ä’´’∂ ’°÷Ä’™’•÷Ñ - [old_price] $
’Ü’∏÷Ä ’°÷Ä’™’•÷Ñ - [new_price] $

[url]''', '''[car_brand] [model] 
[year]   [engine_size] L

–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ - [old_price] $
–ù–æ–≤–∞—è —Ü–µ–Ω–∞  - [new_price] $

[url]''', '''[car_brand] [model] 
[year]   [engine_size] L

Old price - [old_price] $
New price - [new_price] $

[url]''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[car_brand]",str(car_brand)).replace("[model]",str(model)).replace("[year]",str(year)).replace("[engine_size]",str(engine_size)).replace("[old_price]",str(old_price)).replace("[new_price]",str(new_price)).replace("[url]",str(url))

def add_saved_car(cid : int, all : bool = False) -> str:
    '''‚ûï Add car'''
    phrases = ['''‚ûï ‘±’æ’•’¨’°÷Å’∂’•’¨ ’¥’•÷Ñ’•’∂’°''', '''‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∞—à–∏–Ω—É''', '''‚ûï Add car''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def saved_cars_info(cid : int, all : bool = False) -> str:
    '''Here you can add cars and when there is a similar car on the market, bot will notify you.'''
    phrases = ['''‘±’µ’Ω’ø’•’≤ ’§’∏÷Ç÷Ñ ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’°’æ’•’¨’°÷Å’∂’•’¨ ’¥’•÷Ñ’•’∂’°’∂’•÷Ä, ÷á ’•÷Ä’¢ ’∑’∏÷Ç’Ø’°’µ’∏÷Ç’¥ ’∂’¥’°’∂ ’¥’•÷Ñ’•’∂’° ’¨’´’∂’´, ’¢’∏’ø’® ’±’•’¶ ’Ø’ø’•’≤’•’Ø’°÷Å’∂’´:''', '''–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏ –∫–æ–≥–¥–∞ –Ω–∞ —Ä—ã–Ω–∫–µ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Ö–æ–∂–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –±–æ—Ç —É–≤–µ–¥–æ–º–∏—Ç –≤–∞—Å –æ–± —ç—Ç–æ–º.''', '''Here you can add cars and when there is a similar car on the market, bot will notify you.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def save_car(cid : int, all : bool = False) -> str:
    '''üìå Save car'''
    phrases = ['''üìå ’ä’°’∞’∫’°’∂’•’¨ ’¥’•÷Ñ’•’∂’°’∂''', '''üìå –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –º–∞—à–∏–Ω—É''', '''üìå Save car''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def car_saved(cid : int, all : bool = False) -> str:
    '''‚úÖ Car saved'''
    phrases = ['''‚úÖ ’Ñ’•÷Ñ’•’∂’°’∂ ’∫’°’∞’∫’°’∂’æ’°’Æ ’ß''', '''‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω''', '''‚úÖ Car saved''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_mileage_start(cid : int, all : bool = False) -> str:
    '''Please choose the minimal mileage of the car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’¥’•÷Ñ’•’∂’°’µ’´ ’∂’æ’°’¶’°’£’∏÷Ç’µ’∂ ’æ’°’¶÷Ñ’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the minimal mileage of the car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_mileage_end(cid : int, all : bool = False) -> str:
    '''Please choose the maximal mileage of the car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’¥’•÷Ñ’•’∂’°’µ’´ ’°’º’°’æ’•’¨’°’£’∏÷Ç’µ’∂ ’æ’°’¶÷Ñ’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the maximal mileage of the car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_price_start(cid : int, all : bool = False) -> str:
    '''Please choose the minimal price of the car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’¥’•÷Ñ’•’∂’°’µ’´ ’∂’æ’°’¶’°’£’∏÷Ç’µ’∂ ’°÷Ä’™’•÷Ñ’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the minimal price of the car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_price_end(cid : int, all : bool = False) -> str:
    '''Please choose the maximal price of the car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’¥’•÷Ñ’•’∂’°’µ’´ ’°’º’°’æ’•’¨’°’£’∏÷Ç’µ’∂ ’°÷Ä’™’•÷Ñ’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the maximal price of the car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def wrong_format(cid : int, all : bool = False) -> str:
    '''‚ùå Wrong format, try again'''
    phrases = ['''‚ùå ’ç’≠’°’¨ ’±÷á’°’π’°÷É, ’∂’∏÷Ä’´÷Å ÷É’∏÷Ä’±’•÷Ñ''', '''‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑''', '''‚ùå Wrong format, try again''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def year(cid : int,year, all : bool = False) -> str:
    '''[year]'''
    phrases = ['''[year] ’©‚Ä§''', '''[year]''', '''[year]''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[year]",str(year))

def mileage(cid : int,mileage, all : bool = False) -> str:
    '''[mileage] km'''
    phrases = ['''[mileage] ’Ø’¥''', '''[mileage] km''', '''[mileage] km''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[mileage]",str(mileage))

def engine_size(cid : int,engine_size, all : bool = False) -> str:
    '''[engine_size] L'''
    phrases = ['''[engine_size] L''', '''[engine_size] L''', '''[engine_size] L''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[engine_size]",str(engine_size))

def interior_color(cid : int,interior_color, all : bool = False) -> str:
    '''[interior_color] interior'''
    phrases = ['''[interior_color] ’´’∂’ø’•÷Ä’´’•÷Ä''', '''[interior_color] –∏–Ω—Ç–µ—Ä—å–µ—Ä''', '''[interior_color] interior''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[interior_color]",str(interior_color))

def interior_material(cid : int,interior_material, all : bool = False) -> str:
    '''[interior_material]'''
    phrases = ['''[interior_material]''', '''[interior_material]''', '''[interior_material]''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[interior_material]",str(interior_material))

def wheel_size(cid : int,wheel_size, all : bool = False) -> str:
    '''R[wheel_size]'''
    phrases = ['''R[wheel_size]''', '''R[wheel_size]''', '''R[wheel_size]''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[wheel_size]",str(wheel_size))

def calculate(cid : int, all : bool = False) -> str:
    '''Calculate'''
    phrases = ['''’Ä’°’∑’æ’•’¨''', '''–†–∞—Å—Å—á–∏—Ç–∞—Ç—å''', '''Calculate''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def calculate_by_year(cid : int, all : bool = False) -> str:
    '''üìà Price graph by year'''
    phrases = ['''üìà ‘≥’∂’•÷Ä’´ ’£÷Ä’°÷Ü’´’Ø’® ’®’Ω’ø ’ø’°÷Ä’´’∂’•÷Ä’´''', '''üìà –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω –ø–æ –≥–æ–¥–∞–º''', '''üìà Price graph by year''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def calculate_by_mileage(cid : int, all : bool = False) -> str:
    '''üìâ Price graph by mileage'''
    phrases = ['''üìâ ‘≥’∂’•÷Ä’´ ’£÷Ä’°÷Ü’´’Ø’® ’®’Ω’ø ’æ’°’¶÷Ñ’´''', '''üìâ –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω –ø–æ –ø—Ä–æ–±–µ–≥—É''', '''üìâ Price graph by mileage''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def label_price(cid : int, all : bool = False) -> str:
    '''Price'''
    phrases = ['''‘≥’´’∂’®''', '''–¶–µ–Ω–∞''', '''Price''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def label_year(cid : int, all : bool = False) -> str:
    '''Year'''
    phrases = ['''’è’°÷Ä’´''', '''–ì–æ–¥''', '''Year''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def label_mileage(cid : int, all : bool = False) -> str:
    '''Mileage'''
    phrases = ['''’é’°’¶÷Ñ’®''', '''–ü—Ä–æ–±–µ–≥''', '''Mileage''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def calculate_result_title(cid : int,url, all : bool = False) -> str:
    '''[url]
üí∞  PRICE INFO  üí∞
'''
    phrases = ['''[url]
üí∞ ‘≥’Ü‘µ’ê‘ª ’è‘µ’Ç‘µ‘ø’à’í‘π’Ö’à’í’Ü’Ü‘µ’ê üí∞
''', '''[url]
üí∞–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –¶–ï–ù–ê–• üí∞
''', '''[url]
üí∞  PRICE INFO  üí∞
''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[url]",str(url))

def result_arm(cid : int,l_price, all : bool = False) -> str:
    '''Armenian market : [l_price] $ üíµ'''
    phrases = ['''’Ä’°’µ’Ø’°’Ø’°’∂ ’∑’∏÷Ç’Ø’° : [l_price] $ üíµ''', '''–ê—Ä–º—è–Ω—Å–∫–∏–π  —Ä—ã–Ω–æ–∫ : [l_price] $ üíµ''', '''Armenian market : [l_price] $ üíµ''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[l_price]",str(l_price))

def result_ge(cid : int,g_price, all : bool = False) -> str:
    '''Georgian market : [g_price] $ üíµ'''
    phrases = ['''’é÷Ä’°÷Å’°’Ø’°’∂ ’∑’∏÷Ç’Ø’° : [g_price] $ üíµ''', '''–ì—Ä—É–∑–∏–Ω—Å–∫–∏–π —Ä—ã–Ω–æ–∫ : [g_price] $ üíµ''', '''Georgian market : [g_price] $ üíµ''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[g_price]",str(g_price))

def result_ge_not_available(cid : int, all : bool = False) -> str:
    '''Georgian market : ??? $ üíµ
‚≠êÔ∏èTo know the prices in Georgia sign up for Premium subscription'''
    phrases = ['''’é÷Ä’°÷Å’°’Ø’°’∂ ’∑’∏÷Ç’Ø’° : ??? $ üíµ
‚≠êÔ∏è’é÷Ä’°’Ω’ø’°’∂’´ ’£’∂’•÷Ä’® ’´’¥’°’∂’°’¨’∏÷Ç ’∞’°’¥’°÷Ä ’£÷Ä’°’∂÷Å’æ’•÷Ñ ’ä÷Ä’•’¥’´’∏÷Ç’¥ ’¢’°’™’°’∂’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’°’∂ ’∞’°’¥’°÷Ä''', '''–ì—Ä—É–∑–∏–Ω—Å–∫–∏–π —Ä—ã–Ω–æ–∫ : ??? $ üíµ
‚≠êÔ∏è–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—ã –≤ –ì—Ä—É–∑–∏–∏, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫—É''', '''Georgian market : ??? $ üíµ
‚≠êÔ∏èTo know the prices in Georgia sign up for Premium subscription''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def price_result_ask(cid : int, all : bool = False) -> str:
    '''Do you think this car is reasonably priced in Armenian market? You dont have to answer this but it will help build a better AI.'''
    phrases = ['''‘ª’û’∂’π ’•÷Ñ ’Ø’°÷Ä’Æ’∏÷Ç’¥, ’°’µ’Ω ’¥’•÷Ñ’•’∂’°’∂ ’≠’•’¨’°’¥’´’û’ø ’ß ’£’∂’°’∞’°’ø’æ’°’Æ ’Ä’°’µ’Ø’°’Ø’°’∂ ’∑’∏÷Ç’Ø’°’µ’∏÷Ç’¥: ’ä’°÷Ä’ø’°’§’´÷Ä ’π’ß ’∫’°’ø’°’Ω’≠’°’∂’•÷Ñ ’°’µ’Ω ’∞’°÷Ä÷Å’´’∂, ’¢’°’µ÷Å ’§’° ’Ø÷Ö’£’∂’´ ’°’æ’•’¨’´ ’≠’•’¨’°÷Å’´ ’°÷Ä’∞’•’Ω’ø’°’Ø’°’∂ ’´’∂’ø’•’¨’•’Ø’ø ’Ø’°’º’∏÷Ç÷Å’•’¨:''', '''–°—á–∏—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã, —á—Ç–æ —ç—Ç–æ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∏–º–µ–µ—Ç —Ä–∞–∑—É–º–Ω—É—é —Ü–µ–Ω—É –Ω–∞ –ê—Ä–º—è–Ω—Å–∫–æ–º —Ä—ã–Ω–∫–µ?? –í–∞–º –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å, –Ω–æ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –±–æ–ª–µ–µ —É–º–Ω—ã–π –ò–ò.''', '''Do you think this car is reasonably priced in Armenian market? You dont have to answer this but it will help build a better AI.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def calculation_not_possible(cid : int, all : bool = False) -> str:
    '''‚ùå Price calculation is not possible for this car!'''
    phrases = ['''‚ùå ‘±’µ’Ω ’¥’•÷Ñ’•’∂’°’µ’´ ’∞’°’¥’°÷Ä ’£’∂’´ ’∞’°’∑’æ’°÷Ä’Ø ’∞’∂’°÷Ä’°’æ’∏÷Ä ’π’ß÷â''', '''‚ùå –†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω!''', '''‚ùå Price calculation is not possible for this car!''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def dont_know(cid : int, all : bool = False) -> str:
    '''I don't know'''
    phrases = ['''’â’£’´’ø’•’¥''', '''–Ø –Ω–µ –∑–Ω–∞—é''', '''I don't know''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def my_price(cid : int, all : bool = False) -> str:
    '''Offer my price'''
    phrases = ['''‘±’º’°’ª’°÷Ä’Ø’•’¨ ’´’¥ ’£’´’∂’®''', '''–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–æ—é —Ü–µ–Ω—É''', '''Offer my price''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def my_price_offer(cid : int, all : bool = False) -> str:
    '''What do you think this car costs in dollars? Write your answer like this "18000" '''
    phrases = ['''‘ª’û’∂’π ’•÷Ñ ’Ø’°÷Ä’Æ’∏÷Ç’¥, ’´’∂’π ’°÷Ä’™’• ’°’µ’Ω ’¥’•÷Ñ’•’∂’°’∂ ’§’∏’¨’¨’°÷Ä’∏’æ: ‘≥÷Ä’•÷Ñ ’±’•÷Ä ’∫’°’ø’°’Ω’≠’°’∂’® ’°’µ’Ω’∫’•’Ω ¬´18000¬ª''', '''–ö–∞–∫ –≤—ã –¥—É–º–∞–µ—Ç–µ, —Å–∫–æ–ª—å–∫–æ –¥–æ–ª–ª–∞—Ä–æ–≤ —Å—Ç–æ–∏—Ç —ç—Ç–∞ –º–∞—à–∏–Ω–∞? –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–≤–µ—Ç —Ç–∞–∫: "18000"''', '''What do you think this car costs in dollars? Write your answer like this "18000" ''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def thanks_for_opinion(cid : int, all : bool = False) -> str:
    '''Thank you for your opinion üëå'''
    phrases = ['''’á’∂’∏÷Ä’∞’°’Ø’°’¨’∏÷Ç’©’µ’∏÷Ç’∂ ’Ø’°÷Ä’Æ’´÷Ñ’´ ’∞’°’¥’°÷Ä üëå''', '''–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ üëå''', '''Thank you for your opinion üëå''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def car_price_info(cid : int,satisfied,notsatisfied,percent, all : bool = False) -> str:
    '''Satisfaction: [satisfied][notsatisfied] [percent]%
Choose car parameters and press calculate to get the price.
‚ö†Ô∏èThe AI calculates the AVERAGE MARKET VALUE for this particular car in Armenia. Dont base your decisions only on this results when buying or selling.'''
    phrases = ['''‘≥’∏’∞’∏÷Ç’∂’°’Ø’∏÷Ç’©’µ’∏÷Ç’∂. [satisfied][notsatisfied] [percent]%
‘∏’∂’ø÷Ä’•÷Ñ ’¥’•÷Ñ’•’∂’°’µ’´ ’∫’°÷Ä’°’¥’•’ø÷Ä’•÷Ä’® ÷á ’Ω’•’≤’¥’•÷Ñ ’∞’°’∑’æ’°÷Ä’Ø’•’¨’ù ’£’´’∂’® ’Ω’ø’°’∂’°’¨’∏÷Ç ’∞’°’¥’°÷Ä:
‚ö†Ô∏è‘±÷Ä’∞’•’Ω’ø’°’Ø’°’∂ ’´’∂’ø’•’¨’•’Ø’ø’® ’∞’°’∑’æ’°÷Ä’Ø’∏÷Ç’¥ ’ß ’°’µ’Ω ’Ø’∏’∂’Ø÷Ä’•’ø ’¥’•÷Ñ’•’∂’°’µ’´ ’Ñ‘ª’ã‘ª’Ü ’á’à’í‘ø‘±’Ö‘±‘ø‘±’Ü ‘±’ê‘∫‘µ’î‘∏ ’∞’°’µ’°’Ω’ø’°’∂’∏÷Ç’¥: ‘≥’∂’•’¨’´’Ω ’Ø’°’¥ ’æ’°’≥’°’º’•’¨’´’Ω ’¥’´ ’∞’´’¥’∂’•÷Ñ ’±’•÷Ä ’∏÷Ä’∏’∑’∏÷Ç’¥’∂’•÷Ä’® ’¥’´’°’µ’∂ ’°’µ’Ω ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’´ ’æ÷Ä’°:''', '''–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å: [satisfied][notsatisfied] [percent]%
–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ –Ω–∞–∂–º–∏—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É‚Ä§
‚ö†Ô∏è–ò–ò —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –°–†–ï–î–ù–Æ–Æ –†–´–ù–û–ß–ù–£–Æ –°–¢–û–ò–ú–û–°–¢–¨ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ê—Ä–º–µ–Ω–∏–∏‚Ä§ –ù–µ –æ—Å–Ω–æ–≤—ã–≤–∞–π—Ç–µ —Å–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –Ω–∞ —ç—Ç–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–µ.''', '''Satisfaction: [satisfied][notsatisfied] [percent]%
Choose car parameters and press calculate to get the price.
‚ö†Ô∏èThe AI calculates the AVERAGE MARKET VALUE for this particular car in Armenia. Dont base your decisions only on this results when buying or selling.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang].replace("[satisfied]",str(satisfied)).replace("[notsatisfied]",str(notsatisfied)).replace("[percent]",str(percent))

def choose_car_brand(cid : int, all : bool = False) -> str:
    '''Please choose the brand of your car. If the brand of your car is not shown below it means there is not enough data and the AI cant make a good prediction.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’¥ ’®’∂’ø÷Ä’•÷Ñ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’¥’°’Ø’∂’´’∑’®÷â ‘µ’©’• ’Ω’ø’∏÷Ä÷á ’∂’•÷Ä’Ø’°’µ’°÷Å’æ’°’Æ ’π’ß ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’¥’°’Ø’∂’´’∑’®, ’§’° ’∂’∑’°’∂’°’Ø’∏÷Ç’¥ ’ß, ’∏÷Ä ’¢’°’æ’°÷Ä’°÷Ä ’ø’æ’µ’°’¨’∂’•÷Ä ’π’Ø’°’∂, ÷á AI-’∂ ’π’´ ’Ø’°÷Ä’∏’≤ ’¨’°’æ ’Ø’°’∂’≠’°’ø’•’Ω’∏÷Ç’¥’∂’•÷Ä ’°’∂’•’¨:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è. –ï—Å–ª–∏ –º–∞—Ä–∫–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –Ω–∏–∂–µ, —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –∏ –ò–ò –Ω–µ –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ö–æ—Ä–æ—à–∏–π –ø—Ä–æ–≥–Ω–æ–∑.''', '''Please choose the brand of your car. If the brand of your car is not shown below it means there is not enough data and the AI cant make a good prediction.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_model(cid : int, all : bool = False) -> str:
    '''Please choose the model of your car. If the model of your car is not shown below it means there is not enough data and the AI cant make a good prediction.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’¥ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’¥’∏’§’•’¨’®÷â ‘µ’©’• ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’¥’∏’§’•’¨’® ’∂’•÷Ä’Ø’°’µ’°÷Å’æ’°’Æ ’π’ß ’Ω’ø’∏÷Ä÷á, ’§’° ’∂’∑’°’∂’°’Ø’∏÷Ç’¥ ’ß, ’∏÷Ä ’¢’°’æ’°÷Ä’°÷Ä ’ø’æ’µ’°’¨’∂’•÷Ä ’π’Ø’°’∂, ÷á AI-’∂ ’π’´ ’Ø’°÷Ä’∏’≤ ’¨’°’æ ’Ø’°’∂’≠’°’ø’•’Ω’∏÷Ç’¥’∂’•÷Ä ’°’∂’•’¨:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è. –ï—Å–ª–∏ –º–æ–¥–µ–ª—å –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –Ω–µ –ø–æ–∫–∞–∑–∞–Ω–∞ –Ω–∏–∂–µ, —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –∏ –ò–ò –Ω–µ –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ö–æ—Ä–æ—à–∏–π –ø—Ä–æ–≥–Ω–æ–∑.''', '''Please choose the model of your car. If the model of your car is not shown below it means there is not enough data and the AI cant make a good prediction.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_year(cid : int, all : bool = False) -> str:
    '''Please choose the manufacturing year of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’°÷Ä’ø’°’§÷Ä’∏÷Ç’©’µ’°’∂ ’ø’°÷Ä’•’©’´’æ’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the manufacturing year of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_mileage(cid : int, all : bool = False) -> str:
    '''Please choose the mileage of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’æ’°’¶÷Ñ’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–±–µ–≥ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the mileage of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_engine_size(cid : int, all : bool = False) -> str:
    '''Please choose the engine size of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’∑’°÷Ä’™’´’π’´ ’π’°÷É’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the engine size of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_exterior_color(cid : int, all : bool = False) -> str:
    '''Please choose the exterior color of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’°÷Ä’ø’°÷Ñ’´’∂ ’£’∏÷Ç’µ’∂’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –∫—É–∑–æ–≤–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the exterior color of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_body_type(cid : int, all : bool = False) -> str:
    '''Please choose the body type of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’©’°÷É÷Ñ’´ ’ø’•’Ω’°’Ø’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫—É–∑–æ–≤–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the body type of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_engine_type(cid : int, all : bool = False) -> str:
    '''Please choose the engine type of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’∑’°÷Ä’™’´’π’´ ’ø’•’Ω’°’Ø’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the engine type of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_transmission(cid : int, all : bool = False) -> str:
    '''Please choose the transmission type of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ÷É’∏’≠’°’∂÷Å’¥’°’∂ ’ø’∏÷Ç÷É’´ ’ø’•’Ω’°’Ø’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the transmission type of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_drive_type(cid : int, all : bool = False) -> str:
    '''Please choose the drive type of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’æ’°÷Ä’¥’°’∂ ’ø’•’Ω’°’Ø’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–∏–≤–æ–¥–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the drive type of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_condition(cid : int, all : bool = False) -> str:
    '''Please choose the condition of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’æ’´’≥’°’Ø’®÷â''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the condition of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_gas_equipment(cid : int, all : bool = False) -> str:
    '''Please specify if your car has gas equipment.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’∂’∑’•’¨, ’©’• ’°÷Ä’§’µ’∏÷Ñ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’∂ ’∏÷Ç’∂’´ ’£’°’¶’´ ’Ω’°÷Ä÷Ñ’°’æ’∏÷Ä’∏÷Ç’¥’∂’•÷Ä:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ, –µ—Å—Ç—å –ª–∏ –≤ –≤–∞—à–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ –≥–∞–∑–æ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ.''', '''Please specify if your car has gas equipment.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_steering_wheel(cid : int, all : bool = False) -> str:
    '''Please choose the steering wheel position of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’≤’•’Ø’´ ’§’´÷Ä÷Ñ’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ä—É–ª–µ–≤–æ–≥–æ –∫–æ–ª–µ—Å–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the steering wheel position of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_headlights(cid : int, all : bool = False) -> str:
    '''Please specify the type of headlights in your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’¥ ’∂’∑’•÷Ñ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’¨’∏÷Ç’Ω’°÷Ä’±’°’Ø’∂’•÷Ä’´ ’ø’•’Ω’°’Ø’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–∏–ø —Ñ–∞—Ä –≤ –≤–∞—à–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ.''', '''Please specify the type of headlights in your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_interior_color(cid : int, all : bool = False) -> str:
    '''Please choose the interior color of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’Ω÷Ä’°’∞’´ ’£’∏÷Ç’µ’∂’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç —Å–∞–ª–æ–Ω–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the interior color of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_interior_material(cid : int, all : bool = False) -> str:
    '''Please choose the interior material of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’Ω÷Ä’°’∞’´ ’∂’µ’∏÷Ç’©’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª —Å–∞–ª–æ–Ω–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the interior material of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_sunroof(cid : int, all : bool = False) -> str:
    '''Please specify if your car has a sunroof.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’∂’∑’•’¨, ’©’• ’°÷Ä’§’µ’∏÷Ñ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’∂ ’∏÷Ç’∂’´ ’¨’∏÷Ç’Ω’°’µ’´’∂ ’ø’°’∂’´÷Ñ:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ, –µ—Å—Ç—å –ª–∏ –≤ –≤–∞—à–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ –ª—é–∫ –Ω–∞ –∫—Ä—ã—à–µ.''', '''Please specify if your car has a sunroof.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_car_wheel_size(cid : int, all : bool = False) -> str:
    '''Please choose the wheel size of your car.'''
    phrases = ['''‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’±’•÷Ä ’¥’•÷Ñ’•’∂’°’µ’´ ’°’∂’´’æ’´ ’π’°÷É’®:''', '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –∫–æ–ª–µ—Å –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.''', '''Please choose the wheel size of your car.''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def best_offers(cid : int, all : bool = False) -> str:
    '''Best offers'''
    phrases = ['''‘º’°’æ’°’£’∏÷Ç’µ’∂ ’°’º’°’ª’°÷Ä’Ø’∂’•÷Ä''', '''–õ—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è''', '''Best offers''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def choose_marz(cid : int, all : bool = False) -> str:
    '''Choose region'''
    phrases = ['''‘∏’∂’ø÷Ä’•÷Ñ ’ø’°÷Ä’°’Æ’°’∑÷Ä’ª’°’∂''', '''–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω''', '''Choose region''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_YEREVAN(cid : int, all : bool = False) -> str:
    '''Yerevan'''
    phrases = ['''‘µ÷Ä÷á’°’∂''', '''–ï—Ä–µ–≤–∞–Ω''', '''Yerevan''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_ARMAVIR(cid : int, all : bool = False) -> str:
    '''Armavir'''
    phrases = ['''‘±÷Ä’¥’°’æ’´÷Ä''', '''–ê—Ä–º–∞–≤–∏—Ä''', '''Armavir''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_ARARAT(cid : int, all : bool = False) -> str:
    '''Ararat'''
    phrases = ['''‘±÷Ä’°÷Ä’°’ø''', '''–ê—Ä–∞—Ä–∞—Ç''', '''Ararat''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_KOTAYK(cid : int, all : bool = False) -> str:
    '''Kotayk'''
    phrases = ['''‘ø’∏’ø’°’µ÷Ñ''', '''–ö–æ—Ç–∞–π–∫''', '''Kotayk''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_SHIRAK(cid : int, all : bool = False) -> str:
    '''Shirak'''
    phrases = ['''’á’´÷Ä’°’Ø''', '''–®–∏—Ä–∞–∫''', '''Shirak''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_LORRI(cid : int, all : bool = False) -> str:
    '''Lorri'''
    phrases = ['''‘º’∏’º’´''', '''–õ–æ—Ä–∏''', '''Lorri''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_GEGHARKUNIK(cid : int, all : bool = False) -> str:
    '''Gegharkunik'''
    phrases = ['''‘≥’•’≤’°÷Ä÷Ñ’∏÷Ç’∂’´÷Ñ''', '''–ì–µ–≥–∞—Ä–∫—É–Ω–∏–∫''', '''Gegharkunik''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_SYUNIK(cid : int, all : bool = False) -> str:
    '''Syunik'''
    phrases = ['''’ç’µ’∏÷Ç’∂’´÷Ñ''', '''–°—é–Ω–∏–∫''', '''Syunik''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_ARAGATSOTN(cid : int, all : bool = False) -> str:
    '''Aragatsotn'''
    phrases = ['''‘±÷Ä’°’£’°’Æ’∏’ø’∂''', '''–ê—Ä–∞–≥–∞—Ü–æ—Ç–Ω''', '''Aragatsotn''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_TAVUSH(cid : int, all : bool = False) -> str:
    '''Tavush'''
    phrases = ['''’è’°’æ’∏÷Ç’∑''', '''–¢–∞–≤—É—à''', '''Tavush''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_VAYOTS_DZOR(cid : int, all : bool = False) -> str:
    '''Vayots Dzor'''
    phrases = ['''’é’°’µ’∏÷Å ’±’∏÷Ä''', '''–í–∞–π–æ—Ü –î–∑–æ—Ä''', '''Vayots Dzor''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def marz_ARTSAKH(cid : int, all : bool = False) -> str:
    '''Artsakh'''
    phrases = ['''‘±÷Ä÷Å’°’≠''', '''–ê—Ä—Ü–∞—Ö''', '''Artsakh''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def sedan(cid : int, all : bool = False) -> str:
    '''Sedan'''
    phrases = ['''’ç’•’§’°’∂''', '''–°–µ–¥–∞–Ω''', '''Sedan''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def hatchback(cid : int, all : bool = False) -> str:
    '''Hatchback'''
    phrases = ['''’Ä’•’ø’π’¢’•÷Ñ''', '''–•—ç—Ç—á–±–µ–∫''', '''Hatchback''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def wagon(cid : int, all : bool = False) -> str:
    '''Wagon'''
    phrases = ['''’à÷Ç’∂’´’æ’•÷Ä’Ω’°’¨''', '''–£–Ω–∏–≤–µ—Ä—Å–∞–ª''', '''Wagon''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def coupe(cid : int, all : bool = False) -> str:
    '''Coupe'''
    phrases = ['''‘ø’∏÷Ç’∫’•''', '''–ö—É–ø–µ''', '''Coupe''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def crossover(cid : int, all : bool = False) -> str:
    '''SUV / Crossover'''
    phrases = ['''‘±’¥’•’∂’°’£’∂’°÷Å / ’î÷Ä’∏’Ω’Ω’∏’æ’•÷Ä''', '''–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫ / –ö—Ä–æ—Å—Å–æ–≤–µ—Ä''', '''SUV / Crossover''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def minivan(cid : int, all : bool = False) -> str:
    '''Minivan'''
    phrases = ['''’Ñ’´’∂’´’æ’•’∂''', '''–ú–∏–Ω–∏–≤—ç–Ω''', '''Minivan''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def pickup(cid : int, all : bool = False) -> str:
    '''Pickup'''
    phrases = ['''’ì’´÷Ñ’°÷É''', '''–ü–∏–∫–∞–ø''', '''Pickup''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def minibus(cid : int, all : bool = False) -> str:
    '''Minibus'''
    phrases = ['''’Ñ’´’Ø÷Ä’∏’°’æ’ø’∏’¢’∏÷Ç’Ω''', '''–ú–∏–∫—Ä–æ–∞–≤—Ç–æ–±—É—Å''', '''Minibus''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def van(cid : int, all : bool = False) -> str:
    '''Van'''
    phrases = ['''’ñ’∏÷Ç÷Ä’£’∏’∂''', '''–§—É—Ä–≥–æ–Ω''', '''Van''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def convertible(cid : int, all : bool = False) -> str:
    '''Convertible'''
    phrases = ['''‘ø’°’¢÷Ä’´’∏’¨’•’ø''', '''–ö–∞–±—Ä–∏–æ–ª–µ—Ç''', '''Convertible''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def limo(cid : int, all : bool = False) -> str:
    '''Limo'''
    phrases = ['''‘º’´’¥’∏÷Ç’¶’´’∂''', '''–õ–∏–º—É–∑–∏–Ω''', '''Limo''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def roadster(cid : int, all : bool = False) -> str:
    '''Roadster'''
    phrases = ['''’å’∏’§’Ω’©’•÷Ä''', '''–†–æ–¥—Å—Ç–µ—Ä''', '''Roadster''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def liftback(cid : int, all : bool = False) -> str:
    '''Liftback'''
    phrases = ['''‘º’´÷Ü’ø’¢’•’Ø''', '''–õ–∏—Ñ—Ç–±–µ–∫''', '''Liftback''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def fastback(cid : int, all : bool = False) -> str:
    '''Fastback'''
    phrases = ['''’ñ’°’Ω’ø’¢’•’Ø''', '''–§–∞—Å—Ç–±–µ–∫''', '''Fastback''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def compact_mpv(cid : int, all : bool = False) -> str:
    '''Compact MPV'''
    phrases = ['''‘ø’∏’¥’∫’°’Ø’ø’æ’•’∂''', '''–ö–æ–º–ø–∞–∫—Ç–≤—ç–Ω''', '''Compact MPV''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def gasoline(cid : int, all : bool = False) -> str:
    '''Gasoline'''
    phrases = ['''‘≤’•’∂’¶’´’∂''', '''–ë–µ–Ω–∑–∏–Ω''', '''Gasoline''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def diesel(cid : int, all : bool = False) -> str:
    '''Diesel'''
    phrases = ['''‘¥’´’¶’•’¨''', '''–î–∏–∑–µ–ª—å''', '''Diesel''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def hybrid(cid : int, all : bool = False) -> str:
    '''Hybrid'''
    phrases = ['''’Ä’´’¢÷Ä’´’§''', '''–ì–∏–±—Ä–∏–¥''', '''Hybrid''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def electric(cid : int, all : bool = False) -> str:
    '''Electric'''
    phrases = ['''’ß’¨’•’Ø’ø÷Ä’°’Ø’°’∂''', '''–≠–ª–µ–∫—Ç—Ä–æ''', '''Electric''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def hydrogen(cid : int, all : bool = False) -> str:
    '''Hydrogen'''
    phrases = ['''’ã÷Ä’°’Æ’∂’°’µ’´’∂''', '''–í–æ–¥–æ—Ä–æ–¥–Ω—ã–π''', '''Hydrogen''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def manual(cid : int, all : bool = False) -> str:
    '''Manual'''
    phrases = ['''’Ñ’•’≠’°’∂’´’Ø’°’Ø’°’∂''', '''–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è''', '''Manual''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def automatic(cid : int, all : bool = False) -> str:
    '''Automatic'''
    phrases = ['''‘±’æ’ø’∏’¥’°’ø''', '''–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è''', '''Automatic''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def front_wheel_drive(cid : int, all : bool = False) -> str:
    '''Front Wheel Drive'''
    phrases = ['''‘±’º’ª÷á’´ ÷Ñ’°÷Ä’∑’°’Ø''', '''–ü–µ—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–≤–æ–¥''', '''Front Wheel Drive''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def rear_wheel_drive(cid : int, all : bool = False) -> str:
    '''Rear Wheel Drive'''
    phrases = ['''‘µ’ø÷á’´ ÷Ñ’°÷Ä’∑’°’Ø''', '''–ó–∞–¥–Ω–∏–π –ø—Ä–∏–≤–æ–¥''', '''Rear Wheel Drive''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def all_wheel_drive(cid : int, all : bool = False) -> str:
    '''All Wheel Drive'''
    phrases = ['''‘º’´’°÷Ñ’°÷Ä’∑’°’Ø''', '''–ü–æ–ª–Ω—ã–π –ø—Ä–∏–≤–æ–¥''', '''All Wheel Drive''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def car_is_not_damaged(cid : int, all : bool = False) -> str:
    '''Car is not damaged'''
    phrases = ['''’â’æ’©’°÷Ä’æ’°’Æ''', '''–ù–µ –±–∏—Ç–æ–µ''', '''Car is not damaged''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def car_is_damaged(cid : int, all : bool = False) -> str:
    '''Car is damaged'''
    phrases = ['''’é’©’°÷Ä’æ’°’Æ''', '''–ë–∏—Ç–æ–µ''', '''Car is damaged''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def gas_no(cid : int, all : bool = False) -> str:
    '''Gas not Installed'''
    phrases = ['''‘≥’°’¶ ’π’ø’•’≤’°’§÷Ä’æ’°’Æ''', '''–ì–∞–∑ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω''', '''Gas not Installed''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def gas_installed(cid : int, all : bool = False) -> str:
    '''Gas installed'''
    phrases = ['''‘≥’°’¶ ’ø’•’≤’°’§÷Ä’æ’°’Æ''', '''–ì–∞–∑ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω''', '''Gas installed''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def left_steering(cid : int, all : bool = False) -> str:
    '''Left hand drive'''
    phrases = ['''’Ç’•’Ø’® ’±’°’≠''', '''–õ–µ–≤—ã–π —Ä—É–ª—å''', '''Left hand drive''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def right_steering(cid : int, all : bool = False) -> str:
    '''Right hand drive'''
    phrases = ['''’Ç’•’Ø’® ’°’ª''', '''–ü—Ä–∞–≤—ã–π —Ä—É–ª—å''', '''Right hand drive''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_white(cid : int, all : bool = False) -> str:
    '''White'''
    phrases = ['''’ç’∫’´’ø’°’Ø''', '''–ë–µ–ª—ã–π''', '''White''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_silver(cid : int, all : bool = False) -> str:
    '''Silver'''
    phrases = ['''‘±÷Ä’Æ’°’©’°’£’∏÷Ç’µ’∂''', '''–°–µ—Ä–µ–±—Ä—è–Ω—ã–π''', '''Silver''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_gray(cid : int, all : bool = False) -> str:
    '''Gray'''
    phrases = ['''’Ñ’∏’≠÷Ä’°’£’∏÷Ç’µ’∂''', '''–°–µ—Ä—ã–π''', '''Gray''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_black(cid : int, all : bool = False) -> str:
    '''Black'''
    phrases = ['''’ç÷á''', '''–ß—ë—Ä–Ω—ã–π''', '''Black''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_brown(cid : int, all : bool = False) -> str:
    '''Brown'''
    phrases = ['''’á’°’£’°’∂’°’Ø’°’£’∏÷Ç’µ’∂''', '''–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π''', '''Brown''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_gold(cid : int, all : bool = False) -> str:
    '''Gold'''
    phrases = ['''’à’Ω’Ø’•’£’∏÷Ç’µ’∂''', '''–ó–æ–ª–æ—Ç–æ–π''', '''Gold''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_beige(cid : int, all : bool = False) -> str:
    '''Beige'''
    phrases = ['''‘≤’•’™''', '''–ë–µ–∂–µ–≤—ã–π''', '''Beige''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_red(cid : int, all : bool = False) -> str:
    '''Red'''
    phrases = ['''‘ø’°÷Ä’¥’´÷Ä''', '''–ö—Ä–∞—Å–Ω—ã–π''', '''Red''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_blue(cid : int, all : bool = False) -> str:
    '''Blue'''
    phrases = ['''‘ø’°’∫’∏÷Ç’µ’ø''', '''–°–∏–Ω–∏–π''', '''Blue''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_orange(cid : int, all : bool = False) -> str:
    '''Orange'''
    phrases = ['''’Ü’°÷Ä’∂’ª’°’£’∏÷Ç’µ’∂''', '''–û—Ä–∞–Ω–∂–µ–≤—ã–π''', '''Orange''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_yellow(cid : int, all : bool = False) -> str:
    '''Yellow'''
    phrases = ['''‘¥’•’≤’´’∂''', '''–ñ—ë–ª—Ç—ã–π''', '''Yellow''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_green(cid : int, all : bool = False) -> str:
    '''Green'''
    phrases = ['''‘ø’°’∂’°’π''', '''–ó–µ–ª—ë–Ω—ã–π''', '''Green''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_cyan(cid : int, all : bool = False) -> str:
    '''Cyan'''
    phrases = ['''‘µ÷Ä’Ø’∂’°’£’∏÷Ç’µ’∂''', '''–ì–æ–ª—É–±–æ–π''', '''Cyan''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_maroon(cid : int, all : bool = False) -> str:
    '''Maroon'''
    phrases = ['''‘≤’∏÷Ä’§’∏''', '''–ë–æ—Ä–¥–æ–≤—ã–π''', '''Maroon''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_pink(cid : int, all : bool = False) -> str:
    '''Pink'''
    phrases = ['''’é’°÷Ä’§’°’£’∏÷Ç’µ’∂''', '''–†–æ–∑–æ–≤—ã–π''', '''Pink''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def exterior_purple(cid : int, all : bool = False) -> str:
    '''Purple'''
    phrases = ['''’Ñ’°’∂’∏÷Ç’∑’°’Ø’°’£’∏÷Ç’µ’∂''', '''–§–∏–æ–ª–µ—Ç–æ–≤—ã–π''', '''Purple''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_white(cid : int, all : bool = False) -> str:
    '''White'''
    phrases = ['''’ç’∫’´’ø’°’Ø''', '''–ë–µ–ª—ã–π''', '''White''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_gray(cid : int, all : bool = False) -> str:
    '''Gray'''
    phrases = ['''’Ñ’∏’≠÷Ä’°’£’∏÷Ç’µ’∂''', '''–°–µ—Ä—ã–π''', '''Gray''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_black(cid : int, all : bool = False) -> str:
    '''Black'''
    phrases = ['''’ç÷á''', '''–ß—ë—Ä–Ω—ã–π''', '''Black''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_brown(cid : int, all : bool = False) -> str:
    '''Brown'''
    phrases = ['''’á’°’£’°’∂’°’Ø’°’£’∏÷Ç’µ’∂''', '''–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π''', '''Brown''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_beige(cid : int, all : bool = False) -> str:
    '''Beige'''
    phrases = ['''‘≤’•’™''', '''–ë–µ–∂–µ–≤—ã–π''', '''Beige''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_red(cid : int, all : bool = False) -> str:
    '''Red'''
    phrases = ['''‘ø’°÷Ä’¥’´÷Ä''', '''–ö—Ä–∞—Å–Ω—ã–π''', '''Red''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_blue(cid : int, all : bool = False) -> str:
    '''Blue'''
    phrases = ['''‘ø’°’∫’∏÷Ç’µ’ø''', '''–°–∏–Ω–∏–π''', '''Blue''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_other(cid : int, all : bool = False) -> str:
    '''Other'''
    phrases = ['''‘±’µ’¨''', '''–î—Ä—É–≥–æ–π''', '''Other''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_gold(cid : int, all : bool = False) -> str:
    '''Gold'''
    phrases = ['''’à’Ω’Ø’•’£’∏÷Ç’µ’∂''', '''–ó–æ–ª–æ—Ç–æ–π''', '''Gold''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_maroon(cid : int, all : bool = False) -> str:
    '''Maroon'''
    phrases = ['''‘≤’∏÷Ä’§’∏''', '''–ë–æ—Ä–¥–æ–≤—ã–π''', '''Maroon''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_orange(cid : int, all : bool = False) -> str:
    '''Orange'''
    phrases = ['''’Ü’°÷Ä’∂’ª’°’£’∏÷Ç’µ’∂''', '''–û—Ä–∞–Ω–∂–µ–≤—ã–π''', '''Orange''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def interior_yellow(cid : int, all : bool = False) -> str:
    '''Yellow'''
    phrases = ['''‘¥’•’≤’´’∂''', '''–ñ—ë–ª—Ç—ã–π''', '''Yellow''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def no_sunroof(cid : int, all : bool = False) -> str:
    '''No sunroof'''
    phrases = ['''‘º’µ’∏÷Ç’Ø ’π’Ø’°''', '''–õ—é–∫–∞ –Ω–µ—Ç''', '''No sunroof''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def regular_sunroof_sunroof(cid : int, all : bool = False) -> str:
    '''Regular sunroof'''
    phrases = ['''’ç’∏’æ’∏÷Ä’°’Ø’°’∂ ’¨’µ’∏÷Ç’Ø''', '''–û–±—ã—á–Ω—ã–π –ª—é–∫''', '''Regular sunroof''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def panoramic_sunroof_sunroof(cid : int, all : bool = False) -> str:
    '''Panoramic sunroof'''
    phrases = ['''’ä’°’∂’∏÷Ä’°’¥’°’µ’´’∂ ’¨’µ’∏÷Ç’Ø''', '''–ü–∞–Ω–æ—Ä–∞–º–Ω—ã–π –ª—é–∫''', '''Panoramic sunroof''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def led_headlights(cid : int, all : bool = False) -> str:
    '''Led headlights'''
    phrases = ['''‘º’•’§ ’¨’∏÷Ç’Ω’°÷Ä’±’°’Ø’∂’•÷Ä''', '''–°–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–µ —Ñ–∞—Ä—ã''', '''Led headlights''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def halogen_headlights(cid : int, all : bool = False) -> str:
    '''Halogen headlights'''
    phrases = ['''’Ä’°’¨’∏’£’•’∂ ’¨’∏÷Ç’Ω’°÷Ä’±’°’Ø’∂’•÷Ä’Ø''', '''–ì–∞–ª–æ–≥–µ–Ω–Ω—ã–µ —Ñ–∞—Ä—ã''', '''Halogen headlights''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def —Öenon_headlights(cid : int, all : bool = False) -> str:
    '''Xenon headlights'''
    phrases = ['''’î’Ω’•’∂’∏’∂’°’µ’´’∂ ’¨’∏÷Ç’Ω’°÷Ä’±’°’Ø’∂’•÷Ä''', '''–ö—Å–µ–Ω–æ–Ω–æ–≤—ã–µ —Ñ–∞—Ä—ã''', '''Xenon headlights''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def leather(cid : int, all : bool = False) -> str:
    '''Material leather'''
    phrases = ['''’Ñ’°’ø’•÷Ä’´’°’¨ ’Ø’°’∑’´''', '''–ú–∞—Ç–µ—Ä–∏–∞–ª –∫–æ–∂–∞''', '''Material leather''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def textile(cid : int, all : bool = False) -> str:
    '''Material textile'''
    phrases = ['''’Ñ’°’ø’•÷Ä’´’°’¨ ’Ø’ø’∏÷Ä''', '''–ú–∞—Ç–µ—Ä–∏–∞–ª —Ç–µ–∫—Å—Ç–∏–ª—å''', '''Material textile''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def other(cid : int, all : bool = False) -> str:
    '''Material other'''
    phrases = ['''’Ñ’°’ø’•÷Ä’´’°’¨ ’°’µ’¨''', '''–ú–∞—Ç–µ—Ä–∏–∞–ª –¥—Ä—É–≥–æ–π''', '''Material other''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def alcantara(cid : int, all : bool = False) -> str:
    '''Material alcantara'''
    phrases = ['''’Ñ’°’ø’•÷Ä’´’°’¨ ’°’¨’Ø’°’∂’ø’°÷Ä’°''', '''–ú–∞—Ç–µ—Ä–∏–∞–ª –∞–ª—å–∫–∞–Ω—Ç–∞—Ä–∞''', '''Material alcantara''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def velour(cid : int, all : bool = False) -> str:
    '''Material velour'''
    phrases = ['''’Ñ’°’ø’•÷Ä’´’°’¨ ’©’°’æ’´’∑''', '''–ú–∞—Ç–µ—Ä–∏–∞–ª –≤–µ–ª—é—Ä''', '''Material velour''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]

def leatherette(cid : int, all : bool = False) -> str:
    '''Material leatherette'''
    phrases = ['''’Ñ’°’ø’•÷Ä’´’°’¨ ’§’•÷Ä’¥’°’∂’ø’´’∂''', '''–ú–∞—Ç–µ—Ä–∏–∞–ª –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–∂–∞''', '''Material leatherette''']
    if all:
        return phrases
    if cid > 10:
        lang = db.getUserLang(cid)
    else: 
        lang = cid
    return phrases[lang]